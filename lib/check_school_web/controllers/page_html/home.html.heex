<div id="body" v-cloak>
  <el-container>
    <el-main>
      <el-row v-bind:gutter="20">
        <el-col v-bind:span="20" v-bind:offset="2">
          <el-card class="box-card">
            <template #header>
              <div class="card-header">
                <span>订阅转换</span>
              </div>
            </template>
            <el-form label-width="160px">
              <el-form-item label="报考文件">
                <el-upload
                  action="/api/upload_yaml"
                  v-bind:limit="1"
                  v-bind:before-upload="beforeUpload"
                  v-bind:on-success="uploadSuccess"
                  v-bind:on-error="uploadError">
                  <el-button type="primary">点击上传</el-button>
                </el-upload>
              </el-form-item>
              <el-form-item label="投档线文件">
                <el-upload
                  action="/api/upload_yaml"
                  v-bind:limit="1"
                  v-bind:before-upload="beforeUpload"
                  v-bind:on-success="uploadSuccess2"
                  v-bind:on-error="uploadError">
                  <el-button type="primary">点击上传</el-button>
                </el-upload>
              </el-form-item>
              <el-form-item label="分数">
                <el-input v-model="form.fen" class="all-width-item" />
              </el-form-item>
            </el-form>
            <el-divider border-style="dashed">
              <el-icon><star-filled /></el-icon>
            </el-divider>
            <el-form label-width="160px">
              <el-form-item>
                <el-button type="primary" @click="onSubmit" v-bind:loading="loading === 'submit'" >下载结果</el-button>
              </el-form-item>
            </el-form>
          </el-card>
        </el-col>
      </el-row>
    </el-main>
  </el-container>
</div>

<script>
(function () {
  const vue = ''
})()

const apiRequest = function ({that, method, url, data}) {
  const promise = new Promise(function (resolve) {
    let axiosAttribute;
    if (method === 'post' || method === 'put') {
      axiosAttribute = { method: method, url: decodeURI(url), data: data }
    } else {
      axiosAttribute = { method: method, url: decodeURI(url), params: data }
    }
    // 请求
    axios(axiosAttribute)
    .then(function (response) {
      return resolve(response.data);
    })
    .catch(function (error) {
      if (that) {
        that.loading = ''
        that.$message({ message: '网络连接错误!', type: 'error' });
      }
    });
  })
  return promise
}

const setClipboard = (that, text) => {
  navigator.clipboard.writeText(text)
  that.$message({ message: `内容「${text}」已复制成功`, type: 'success' });
}

const bodyApp = Vue.createApp({
  computed: {
    diseaseDownload: {
      get () {
        if (this.yarmResultUrl == '') {
          return true
        } else {
          return false
        }
      }
    },
  },
  data () {
    return {
      loading: '',
      baokaofile: '',
      toudangfile: '',
      form: { fen: 428 },
      yarmResultUrl: ''
    }
  },
  created: function () {
  },
  methods: {
    onSubmit () {
      this.form.baokaofile = this.baokaofile
      this.form.toudangfile = this.toudangfile
      this.loading = 'submit'
      const requestObj = {
        that: this,
        method: 'post',
        url: `/api/convert`,
        data: this.form
      }
      apiRequest(requestObj).then(res => {
        this.loading = ''
        if (res.is_success) {
          this.$message({ message: '订阅转换成功', type: 'success'})
          window.open(`${window.location.origin}/${res.path}`)
        } else {
          this.yarmResultUrl = ''
          this.$message({ message: res.msg, type: 'error' })
        }
      }).catch(err => {
        this.yarmResultUrl = ''
        this.loading = ''
      })
    },
    beforeUpload(rawFile) {
      const fileType = rawFile.name.split('.').pop().toLowerCase();
      if (fileType !== 'xlsx') {
        this.$message({ message: '只支持yaml类型的文件,请重新进行选择', type: 'warning'})
        return false
      } else {
        return true
      }
    },
    uploadSuccess(response, file, fileList) {
      if (!response.is_success) {
        this.$message({ message: response.msg, type: 'error'})
        return true
      }
      this.baokaofile = response.data
    },
    uploadSuccess2(response, file, fileList) {
      if (!response.is_success) {
        this.$message({ message: response.msg, type: 'error'})
        return true
      }
      this.toudangfile = response.data
    },
    uploadError(response, file, fileList) {
      this.$message({ message: response.msg, type: 'error'})
    }
  }
})

bodyApp.use(ElementPlus);
bodyApp.mount("#body");
</script>
<style>
  .all-width-item {
    width: 100%;
  }
</style>